@implements IDialogContentComponent<BubbleLayerUIModel>

<FluentCard AreaRestricted="false" Width="@Width" Height="@Height" Style="overflow-y:auto">
    <FluentGrid>
        <UIText Model="@Content.Id" ReadOnly="@Content.Id.IsReadOnly(ReadOnly)" />
        <UIText Model="@Content.SourceId" ReadOnly="@Content.SourceId.IsReadOnly(ReadOnly)" />
        <UIText Model="@Content.Before" ReadOnly="@Content.Before.IsReadOnly(ReadOnly)" />
        <UIColor Model="@options.Color" ReadOnly="@options.Color.IsReadOnly(ReadOnly)" />
        <UIText Model="@options.Blur" ReadOnly="@options.Blur.IsReadOnly(ReadOnly)" FieldType="TextFieldType.Number" />
        <UIText Model="@options.Opacity" ReadOnly="@options.Opacity.IsReadOnly(ReadOnly)" FieldType="TextFieldType.Number" />
        <UIText Model="@options.Radius" ReadOnly="@options.Radius.IsReadOnly(ReadOnly)" FieldType="TextFieldType.Number" />
        <UIColor Model="@options.StrokeColor" ReadOnly="@options.StrokeColor.IsReadOnly(ReadOnly)" />
        <UIText Model="@options.StrokeOpacity" ReadOnly="@options.StrokeOpacity.IsReadOnly(ReadOnly)" FieldType="TextFieldType.Number" />
        <UIText Model="@options.StrokeWidth" ReadOnly="@options.StrokeWidth.IsReadOnly(ReadOnly)" FieldType="TextFieldType.Number" />
        <UISelect Model="options.PitchAlignment" Items="@pitches" ReadOnly="@options.PitchAlignment.IsReadOnly(ReadOnly)" />
    </FluentGrid>
</FluentCard>

@code {
	private List<Option<string>> pitches = UIExtensions.GetEnumLookup<BubbleLayerPitchAlignment>(true);
    private BubbleLayerOptionsUIModel options => Content.Options;

    [Parameter, EditorRequired]
    public BubbleLayerUIModel Content { get; set; }

    [CascadingParameter]
    public FluentDialog? Dialog { get; set; }

    [Parameter]
    public string? Height { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; }

    [Parameter]
    public string? Width { get; set; }
}
