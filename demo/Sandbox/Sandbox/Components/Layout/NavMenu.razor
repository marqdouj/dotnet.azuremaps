@rendermode InteractiveServer

<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
    <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Fill" /></label>
    <nav class="sitenav" aria-labelledby="main-menu">
        <FluentNavMenu Id="main-menu" Collapsible="true" Width="250" Title="Navigation menu" @bind-Expanded="expanded" CustomToggle="true">
            <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
            <FluentNavLink Href="map-basic" Icon="@(new Icons.Regular.Size20.Map())" IconColor="Color.Accent">Basic Map</FluentNavLink>
            <FluentNavLink Href="map-custom" Icon="@(new Icons.Regular.Size20.Map())" IconColor="Color.Accent">Custom Map</FluentNavLink>
            <FluentNavLink Href="map-multi" Icon="@(new Icons.Regular.Size20.Multiplier2x())" IconColor="Color.Accent">Multiple Maps</FluentNavLink>
            <FluentNavGroup Title="Layers" Icon="@(new Icons.Regular.Size20.LayerDiagonal())">
                @foreach (var layer in Enum.GetValues<MapLayerType>())
                {
                    var name = layer.ToString();
                    var text = $"map-layer-{name.ToLower()}";
                    <FluentNavLink Href="@text" Icon="@(new Icons.Regular.Size20.Layer())" IconColor="Color.Accent">@name</FluentNavLink>
                }
            </FluentNavGroup>
        </FluentNavMenu>
    </nav>
</div>

@code {
    private bool expanded = true;
}
