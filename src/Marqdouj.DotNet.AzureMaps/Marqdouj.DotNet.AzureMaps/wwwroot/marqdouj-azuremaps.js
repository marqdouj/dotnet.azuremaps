var marqdoujAzureMaps;(()=>{"use strict";var e={d:(t,o)=>{for(var a in o)e.o(o,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:o[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{MapFactory:()=>n,MapInterop:()=>r});const o=atlas;var a,r;!function(e){let t,o,a,r,n,s,i,c,l,p,d;!function(e){e.NotifyMapEvent="NotifyMapEvent",e.NotifyMapEventConfig="NotifyMapEventConfig",e.NotifyMapEventData="NotifyMapEventData",e.NotifyMapEventError="NotifyMapEventError",e.NotifyMapEventLayer="NotifyMapEventLayer",e.NotifyMapEventMouse="NotifyMapEventMouse",e.NotifyMapEventReady="NotifyMapEventReady",e.NotifyMapEventSource="NotifyMapEventSource",e.NotifyMapEventStyle="NotifyMapEventStyle",e.NotifyMapEventTouch="NotifyMapEventTouch"}(t=e.EventNotifications||(e.EventNotifications={})),function(e){e.BoxZoomEnd="boxzoomend",e.BoxZoomStart="boxzoomstart",e.Drag="drag",e.DragEnd="dragend",e.DragStart="dragstart",e.Idle="idle",e.Load="load",e.Move="move",e.MoveEnd="moveend",e.MoveStart="movestart",e.Pitch="pitch",e.PitchEnd="pitchend",e.PitchStart="pitchstart",e.Render="render",e.Resize="resize",e.Rotate="rotate",e.RotateEnd="rotateend",e.RotateStart="rotatestart",e.TokenAcquired="tokenacquired",e.Zoom="zoom",e.ZoomEnd="zoomend",e.ZoomStart="zoomstart"}(o=e.MapEventGeneral||(e.MapEventGeneral={})),function(e){e.MapConfigChanged="mapconfigurationchanged"}(a=e.MapEventConfig||(e.MapEventConfig={})),function(e){e.Data="data",e.SourceData="sourcedata",e.StyleData="styledata"}(r=e.MapEventData||(e.MapEventData={})),function(e){e.LayerAdded="layeradded",e.LayerRemoved="layerremoved"}(n=e.MapEventLayer||(e.MapEventLayer={})),function(e){e.Click="click",e.ContextMenu="contextmenu",e.DblClick="dblclick",e.MouseDown="mousedown",e.MouseMove="mousemove",e.MouseOut="mouseout",e.MouseOver="mouseover",e.MouseUp="mouseup"}(s=e.MapEventMouse||(e.MapEventMouse={})),function(e){e.Wheel="wheel"}(i=e.MapEventWheel||(e.MapEventWheel={})),function(e){e.SourceAdded="sourceadded",e.SourceRemoved="sourceremoved"}(c=e.MapEventSource||(e.MapEventSource={})),function(e){e.StyleImageMissing="styleimagemissing",e.StyleSelected="styleselected"}(l=e.MapEventStyle||(e.MapEventStyle={})),function(e){e.StyleChanged="stylechanged"}(p=e.MapEventStyleChanged||(e.MapEventStyleChanged={})),function(e){e.TouchCancel="touchcancel",e.TouchEnd="touchend",e.TouchMove="touchmove",e.TouchStart="touchstart"}(d=e.MapEventTouch||(e.MapEventTouch={}))}(a||(a={})),function(e){e.Configuration=class{static getMapOptions(e){const t=n.getMap(e);if(!t)return;const o=t.getServiceOptions();return{camera:t.getCamera(),service:o,style:t.getStyle(),userInteraction:t.getUserInteraction()}}static setMapOptions(e,t){const o=n.getMap(e);o&&(t.camera&&o.setCamera(t.camera),t.service&&o.setServiceOptions(t.service),t.style&&o.setStyle(t.style),t.userInteraction&&o.setUserInteraction(t.userInteraction))}static getCamera(e){const t=n.getMap(e);if(t)return t.getCamera()}static setCamera(e,t){const o=n.getMap(e);if(!o)return;let a={};t.camera&&(a={...t.camera}),t.cameraBounds&&(a={...a,...t.cameraBounds}),t.animation&&(a={...a,...t.animation}),o.setCamera(a)}static getServiceOptions(e){const t=n.getMap(e);if(t)return t.getServiceOptions()}static setServiceOptions(e,t){const o=n.getMap(e);o&&o.setServiceOptions(t)}static getStyle(e){const t=n.getMap(e);if(t)return t.getStyle()}static setStyle(e,t){const o=n.getMap(e);o&&o.setStyle(t)}static getUserInteraction(e){const t=n.getMap(e);if(t)return t.getUserInteraction()}static setUserInteraction(e,t){const o=n.getMap(e);o&&o.setUserInteraction(t)}},e.Layers=class{static createLayer(e,a){const r=n.getMap(e);if(!r)return;const s=`createLayer - ${t.logHeader(e)}`;if(t.isEmptyOrNull(a.type))return void console.error(`${s} error: layer type is missing`);const i=a.id;if(t.isNotEmptyOrNull(i)&&r.layers.getLayerById(i))return void console.error(`${s} error: layer already exists where ID=${i}`);const c=a.sourceId;switch(a.type){case"Bubble":r.layers.add(new o.layer.BubbleLayer(c,i,a.options),a.before);break;case"HeatMap":r.layers.add(new o.layer.HeatMapLayer(c,i,a.options),a.before);break;case"Image":r.layers.add(new o.layer.ImageLayer(a.options,i),a.before);break;case"Line":r.layers.add(new o.layer.LineLayer(c,i,a.options),a.before);break;case"Polygon":r.layers.add(new o.layer.PolygonLayer(c,i,a.options),a.before);break;case"PolygonExtrusion":r.layers.add(new o.layer.PolygonExtrusionLayer(c,i,a.options),a.before);break;case"Symbol":r.layers.add(new o.layer.SymbolLayer(c,i,a.options),a.before);break;case"Tile":r.layers.add(new o.layer.TileLayer(a.options,i),a.before);break;default:console.error(`${s} error: layer type '${a.type}' is not supported`)}}static removeLayer(e,o){const a=n.getMap(e);if(!a)return;const r=a.layers.getLayerById(o);r&&(a.layers.remove(r),console.debug(`${t.logHeader(e)} - layer with id '${o}' was removed.`))}static addMapFeature(e,t,r,s){const i=n.getMap(e);if(!i)return;const c=i.sources.getById(r);if(s&&t.id){const e=c.getShapeById(t.id);e&&c.remove(e)}let l;switch(t.geometry.type.toLowerCase()){case a.Point:l=new o.data.Point(t.geometry.coordinates);break;case a.MultiPoint:l=new o.data.MultiPoint(t.geometry.coordinates,t.bbox);break;case a.LineString:l=new o.data.LineString(t.geometry.coordinates,t.bbox);break;case a.Polygon:l=new o.data.Polygon(t.geometry.coordinates,t.bbox)}if(!l)return void console.error(`Map with ID '${e}' - adding feature error: geometry type '${t.geometry.type}' not supported`);const p=new o.data.Feature(l,t.properties,t.id);if(t.asShape){const e=new o.Shape(p);c.add(e)}else c.add(p)}},e.Map=class{static createDatasource(e,t){const a=n.getMap(e);if(!a)return;if(a.sources.getById(t.id))return void console.warn(`Map with ID '${e}' - datasource with ID '${t.id}' already exists`);const r=new o.source.DataSource(t.id,t.options);a.sources.add(r),t.url&&r.importDataFromUrl(t.url)}static removeDatasource(e,o){const a=n.getMap(e);if(!a)return;const r=a.sources.getById(o);r&&(a.sources.remove(r),console.debug(`${t.logHeader(e)} - datasource with id '${o}' was removed.`))}static clearDatasource(e,t){const o=n.getMap(e);if(!o)return;const a=o.sources.getById(t);a&&a.clear()}static addControls(e,t){const a=n.getMap(e);a&&t.forEach(e=>{let t=null;switch(e.type.toLowerCase()){case"compass":t=new o.control.CompassControl(e.options);break;case"fullscreen":t=new o.control.FullscreenControl(e.options);break;case"pitch":t=new o.control.PitchControl(e.options);break;case"scale":t=new o.control.ScaleControl(e.options);break;case"style":t=new o.control.StyleControl(e.options);break;case"zoom":t=new o.control.ZoomControl(e.options)}t&&(t.jsInterop={id:e.id,interopId:e.interopId,type:e.type,options:e.controlOptions},a.controls.add(t,e.controlOptions))})}static getControls(e){const t=n.getMap(e);if(!t)return;const o=t.controls.getControls(),a=[];return o.filter(e=>this.#e(e)).forEach(e=>{const t=e,o={id:t.jsInterop.id,interopId:t.jsInterop.interopId,type:t.jsInterop.type,options:t.jsInterop.options};a.push(o)}),a}static removeControls(e,t){const o=n.getMap(e);o&&o.controls.getControls().filter(e=>this.#e(e)).forEach(e=>{const a=e;t.find(e=>e.id===a.jsInterop.id||e.interopId===a.jsInterop.interopId)&&o.controls.remove(e)})}static#e(e){return e&&null!=e.jsInterop}};class t{static logHeader(e){return`Map with ID '${e}'`}static isEmptyOrNull(e){return""===e?.trim()}static isNotEmptyOrNull(e){return!this.isEmptyOrNull(e)}}let a;!function(e){e.Point="point",e.MultiPoint="multipoint",e.LineString="linestring",e.MultiLineString="multilinestring",e.Polygon="polygon",e.MultiPolygon="multipolygon"}(a||(a={}))}(r||(r={}));class n{static#t=new Map;static getAuthTokenCallback;static addMap(e,t,a,r,n,s){const i=this.#o(t);if(this.#t.has(t))return void console.warn(`${i} already exists.`);const c=this.#a(a,r),l=new o.Map(t,c);this.#t.set(t,l),console.debug(`${i} was added.`),this.#r(e,t,n,s)}static getMap(e){const t=this.#t.get(e),o=this.#o(e);return t||console.warn(`${o} was not found.`),t}static removeMap(e){const t=this.#t.delete(e),o=this.#o(e);t&&console.debug(`${o} was removed.`)}static#a(e,t){let o={};return t&&(t.service&&(o={...t.service}),t.camera&&(o={...o,...t.camera}),t.style&&(o={...o,...t.style}),t.userInteraction&&(o={...o,...t.userInteraction})),o.authOptions=e,o.authOptions.getToken=this.getAuthTokenCallback,o}static#r(e,t,o,n){const s=this.getMap(t),i=this.#o(t);o??=[],s.events.addOnce("ready",c=>{o.includes("error")&&s.events.add("error",o=>{console.error(`${i} error:`,o.error),e.invokeMethodAsync(a.EventNotifications.NotifyMapEventError,{mapId:t,type:"error",payload:{message:o.error.message,name:o.error.name,stack:o.error.stack,cause:o.error.cause}})}),Object.values(a.MapEventGeneral).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,()=>{e.invokeMethodAsync(a.EventNotifications.NotifyMapEvent,{mapId:t,type:o})})}),Object.values(a.MapEventConfig).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{let n={mapId:t,type:o,payload:r};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventConfig,n)})}),Object.values(a.MapEventData).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{let n={mapId:t,type:o,payload:{dataType:r.dataType,isSourceLoaded:r.isSourceLoaded,source:r.source?.getId(),sourceDataType:r.sourceDataType,tile:r.tile}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventData,n)})}),Object.values(a.MapEventLayer).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{let n={mapId:t,type:o,payload:{id:r.getId()}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventLayer,n)})}),Object.values(a.MapEventMouse).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{try{const n=[];r.shapes.filter(e=>this.#n(e)).forEach(e=>{n.push(this.#s(e))}),r.shapes.filter(e=>this.#i(e)).forEach(e=>{n.push(this.#c(e))}),r.shapes.length!=n.length&&console.warn(`${i} MouseEvent. Event shapes count [${r.shapes.length}] and processed shapes count [${n.length}] does not match.`);let s={mapId:t,type:o,payload:{layerId:r.layerId,pixel:r.pixel,position:r.position,shapes:n}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventMouse,s)}catch(e){console.error(`Error processing mouse event for ${i}:`,e)}})}),Object.values(a.MapEventSource).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{let n={mapId:t,type:o,payload:{id:r.getId()}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventSource,n)})}),Object.values(a.MapEventStyle).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{let n={mapId:t,type:o,payload:{style:r}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventStyle,n)})}),Object.values(a.MapEventStyleChanged).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{let n={mapId:t,type:o,payload:{style:r.style}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventStyle,n)})}),Object.values(a.MapEventTouch).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{const n=[];r.shapes.forEach(e=>{n.push(this.#c(e))});let s={mapId:t,type:o,payload:{pixel:r.pixel,pixels:r.pixels,position:r.position,positions:r.positions,shapes:n,layerId:r.layerId}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEventTouch,s)})}),Object.values(a.MapEventWheel).filter(e=>o.includes(e)).forEach(o=>{s.events.add(o,r=>{let n={mapId:t,type:o,payload:{type:r.type}};e.invokeMethodAsync(a.EventNotifications.NotifyMapEvent,n)})}),n&&r.Map.addControls(t,n),e.invokeMethodAsync(a.EventNotifications.NotifyMapEventReady,{mapId:t,type:"ready"})})}static#o(e){return`Map with ID '${e}'`}static#n(e){return e&&"Feature"===e.type}static#i(e){return e&&null!=e.getType}static#s(e){return{id:e.id?.toString(),type:e.geometry.type,bbox:e.bbox,source:"feature",properties:e.properties}}static#c(e){return{id:e.getId()?.toString(),type:e.getType(),bbox:e.getBounds(),source:"shape",properties:e.getProperties()}}}marqdoujAzureMaps=t})();